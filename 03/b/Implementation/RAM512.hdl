// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	
	//load mechanism : DMux8Way
	DMux8Way(in = load, sel = address[0..2], a = reg0, b = reg1, c = reg2, d = reg3, e = reg4, f = reg5, g = reg6, h = reg7 );

	//registers
	RAM64(in = in, load = reg0, address = address[3..8], out = outReg0);
	RAM64(in = in, load = reg1, address = address[3..8], out = outReg1);
	RAM64(in = in, load = reg2, address = address[3..8], out = outReg2);
	RAM64(in = in, load = reg3, address = address[3..8], out = outReg3);
	RAM64(in = in, load = reg4, address = address[3..8], out = outReg4);
	RAM64(in = in, load = reg5, address = address[3..8], out = outReg5);
	RAM64(in = in, load = reg6, address = address[3..8], out = outReg6);
	RAM64(in = in, load = reg7, address = address[3..8], out = outReg7);
	
	//output mechanism : Mux8Way16
	Mux8Way16(a = outReg0, b = outReg1, c = outReg2, d = outReg3, e = outReg4, f = outReg5, g = outReg6, h = outReg7, sel = address[0..2], out = out);
}
